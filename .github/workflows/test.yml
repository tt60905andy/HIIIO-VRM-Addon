# SPDX-License-Identifier: MIT OR GPL-3.0-or-later
name: test

permissions: {}

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
    branches-ignore:
      - README
  push:
    branches-ignore:
      - README
  workflow_dispatch:

env:
  BLENDER_ARCHIVE_BASE_URL: https://download.blender.org/release

jobs:
  test-windows:
    runs-on: windows-2025
    strategy:
      fail-fast: false
      matrix:
        blender_major_minor_version:
          - 2.93
          - 3.3
          - 3.6
          - 4.2
    env:
      BLENDER_VRM_EXCLUDE_GUI_TEST: true
    steps:
      - uses: actions/checkout@v4
      - name: Cache archive
        id: cache-archive
        uses: actions/cache@v4
        with:
          path: blender.zip
          key: ${{ matrix.blender_major_minor_version }}-archive-5
      - name: Download archive
        if: ${{ steps.cache-archive.outputs.cache-hit != 'true' }}
        env:
          BLENDER_MAJOR_MINOR_VERSION: ${{ matrix.blender_major_minor_version }}
        run: |
          $url = "${env:BLENDER_ARCHIVE_BASE_URL}/Blender${env:BLENDER_MAJOR_MINOR_VERSION}/blender-${env:BLENDER_MAJOR_MINOR_VERSION}.0-windows-x64.zip"
          $retry = 10
          for (; $true; $retry--) {
            try {
              Start-BitsTransfer blender.zip -Source "$url"
              break
            } catch {
              if ($retry -le 0) {
                throw $_.Exception
              }
            }
            Start-Sleep -Seconds 60
          }
      - name: Test
        run: |
          Expand-Archive -LiteralPath blender.zip -DestinationPath "$env:TEMP\blender"
          $env:BLENDER_VRM_TEST_BLENDER_PATH = (Get-ChildItem "$env:TEMP\blender\*\blender.exe")[0].FullName
          & "$env:BLENDER_VRM_TEST_BLENDER_PATH" --background -noaudio --python-exit-code 1 --python tools\generate_dynamic_tests.py
          & "$env:BLENDER_VRM_TEST_BLENDER_PATH" --background -noaudio --python-exit-code 1 --python tools\unittest_discover.py
      - name: Archive failed io test result
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: VRMs (${{ github.job }}#${{ strategy.job-index }})
          path: tests/resources/vrm/*/temp

  test-macos:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        blender_major_minor_version:
          - 2.93
          - 3.3
          - 3.6
          - 4.2
        blender_arch:
          - arm64
        include:
          - blender_major_minor_version: 4.2
            blender_arch: x64
    env:
      BLENDER_VRM_EXCLUDE_GUI_TEST: true
    steps:
      - uses: actions/checkout@v4
      - name: Cache archive
        id: cache-archive
        uses: actions/cache@v4
        with:
          path: blender.dmg
          key: ${{ matrix.blender_major_minor_version }}-${{ matrix.blender_arch }}-archive-5
      - name: Download archive
        if: ${{ steps.cache-archive.outputs.cache-hit != 'true' }}
        env:
          BLENDER_MAJOR_MINOR_VERSION: ${{ matrix.blender_major_minor_version }}
          BLENDER_ARCH: ${{ matrix.blender_arch }}
        run: |
          url="${BLENDER_ARCHIVE_BASE_URL}/Blender${BLENDER_MAJOR_MINOR_VERSION}/blender-${BLENDER_MAJOR_MINOR_VERSION}.0-macos-${BLENDER_ARCH}.dmg"
          curl -fsLS --retry 5 --retry-all-errors "$url" -o blender.dmg
      - name: Test
        run: |
          hdiutil attach blender.dmg
          cp -fr /Volumes/Blender/Blender.app /Applications
          /Applications/Blender.app/Contents/MacOS/blender --background -noaudio --python-exit-code 1 --python tools/generate_dynamic_tests.py
          /Applications/Blender.app/Contents/MacOS/blender --background -noaudio --python-exit-code 1 --python tools/unittest_discover.py
      - name: Archive failed io test result
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: VRMs (${{ github.job }}#${{ strategy.job-index }})
          path: tests/resources/vrm/*/temp

  test-linux:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        blender_major_minor_version:
          - 4.2
    env:
      BLENDER_VRM_EXCLUDE_GUI_TEST: true
    steps:
      - uses: actions/checkout@v4
      - name: Cache archive
        id: cache-archive
        uses: actions/cache@v4
        with:
          path: blender.tar.gz
          key: ${{ matrix.blender_major_minor_version }}-archive-6
      - name: Download archive
        if: ${{ steps.cache-archive.outputs.cache-hit != 'true' }}
        env:
          BLENDER_MAJOR_MINOR_VERSION: ${{ matrix.blender_major_minor_version }}
        run: |
          url="${BLENDER_ARCHIVE_BASE_URL}/Blender${BLENDER_MAJOR_MINOR_VERSION}/blender-${BLENDER_MAJOR_MINOR_VERSION}.0-linux-x64.tar.xz"
          curl -fsLS --retry 5 --retry-all-errors "$url" -o blender.tar.xz
      - name: Test
        run: |
          mkdir -p "$HOME/.local/blender"
          tar -x --strip-components=1 -f blender.tar.xz -C "$HOME/.local/blender"
          "$HOME/.local/blender/blender" --background -noaudio --python-exit-code 1 --python tools/generate_dynamic_tests.py
          "$HOME/.local/blender/blender" --background -noaudio --python-exit-code 1 --python tools/unittest_discover.py
      - name: Archive failed io test result
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: VRMs (${{ github.job }}#${{ strategy.job-index }})
          path: tests/resources/vrm/*/temp
